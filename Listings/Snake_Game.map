Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    main.o(.text.snakeInit) refers to main.o(.bss.Field) for Field
    main.o(.text.snakeInit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    main.o(.text.snakeInit) refers to main.o(.bss.j) for j
    main.o(.text.snakeInit) refers to main.o(.bss.x) for x
    main.o(.text.snakeInit) refers to main.o(.bss.y) for y
    main.o(.text.snakeInit) refers to main.o(.bss.head) for head
    main.o(.text.snakeInit) refers to main.o(.bss.tail) for tail
    main.o(.text.snakeInit) refers to main.o(.bss.power) for power
    main.o(.text.snakeInit) refers to main.o(.bss.dir) for dir
    main.o(.text.snakeInit) refers to main.o(.bss.score) for score
    main.o(.text.snakeInit) refers to main.o(.bss.Game) for Game
    main.o(.text.snakeInit) refers to main.o(.bss.i) for i
    main.o(.text.snakeInit) refers to main.o(.bss.Gy) for Gy
    main.o(.text.snakeInit) refers to main.o(.bss.speedOffset) for speedOffset
    main.o(.ARM.exidx.text.snakeInit) refers to main.o(.text.snakeInit) for [Anonymous Symbol]
    main.o(.text.printField) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.printField) refers to uart.o(.text.print) for print
    main.o(.text.printField) refers to main.o(.bss.score) for score
    main.o(.text.printField) refers to uart.o(.text.printInt) for printInt
    main.o(.text.printField) refers to main.o(.bss.Field) for Field
    main.o(.text.printField) refers to main.o(.bss.head) for head
    main.o(.ARM.exidx.text.printField) refers to main.o(.text.printField) for [Anonymous Symbol]
    main.o(.text.randomPower) refers to rand.o(.emb_text) for rand
    main.o(.text.randomPower) refers to main.o(.bss.a) for a
    main.o(.text.randomPower) refers to main.o(.bss.power) for power
    main.o(.text.randomPower) refers to main.o(.bss.b) for b
    main.o(.text.randomPower) refers to main.o(.bss.Field) for Field
    main.o(.ARM.exidx.text.randomPower) refers to main.o(.text.randomPower) for [Anonymous Symbol]
    main.o(.text.movement) refers to tolower.o(.text) for tolower
    main.o(.text.movement) refers to main.o(.bss.dir) for dir
    main.o(.text.movement) refers to main.o(.bss.y) for y
    main.o(.text.movement) refers to main.o(.bss.x) for x
    main.o(.text.movement) refers to main.o(.bss.Field) for Field
    main.o(.text.movement) refers to main.o(.bss.head) for head
    main.o(.text.movement) refers to main.o(.bss.xTask3Handle) for xTask3Handle
    main.o(.text.movement) refers to main.o(.text.vTask3) for vTask3
    main.o(.text.movement) refers to main.o(.rodata.str1.1) for .L.str.7
    main.o(.text.movement) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.movement) refers to main.o(.bss.speedOffset) for speedOffset
    main.o(.text.movement) refers to main.o(.bss.power) for power
    main.o(.text.movement) refers to main.o(.bss.score) for score
    main.o(.text.movement) refers to main.o(.bss.tail) for tail
    main.o(.ARM.exidx.text.movement) refers to main.o(.text.movement) for [Anonymous Symbol]
    main.o(.text.vTask3) refers to uart.o(.text.clear) for clear
    main.o(.text.vTask3) refers to main.o(.bss.Game) for Game
    main.o(.text.vTask3) refers to main.o(.rodata.str1.1) for .L.str.9
    main.o(.text.vTask3) refers to uart.o(.text.print) for print
    main.o(.text.vTask3) refers to main.o(.bss.score) for score
    main.o(.text.vTask3) refers to uart.o(.text.printInt) for printInt
    main.o(.text.vTask3) refers to main.o(.bss.highScore) for highScore
    main.o(.text.vTask3) refers to main.o(.bss.received_char) for received_char
    main.o(.text.vTask3) refers to main.o(.bss.speedOffset) for speedOffset
    main.o(.text.vTask3) refers to main.o(.bss.Field) for Field
    main.o(.text.vTask3) refers to main.o(.bss.i) for i
    main.o(.text.vTask3) refers to main.o(.bss.Gy) for Gy
    main.o(.text.vTask3) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    main.o(.text.vTask3) refers to main.o(.bss.j) for j
    main.o(.text.vTask3) refers to main.o(.bss.x) for x
    main.o(.text.vTask3) refers to main.o(.bss.y) for y
    main.o(.text.vTask3) refers to main.o(.bss.head) for head
    main.o(.text.vTask3) refers to main.o(.bss.tail) for tail
    main.o(.text.vTask3) refers to main.o(.bss.power) for power
    main.o(.text.vTask3) refers to main.o(.bss.dir) for dir
    main.o(.text.vTask3) refers to main.o(.bss.xTask3Handle) for xTask3Handle
    main.o(.text.vTask3) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.ARM.exidx.text.vTask3) refers to main.o(.text.vTask3) for [Anonymous Symbol]
    main.o(.text.updateTail) refers to main.o(.bss.tail) for tail
    main.o(.text.updateTail) refers to main.o(.bss.Field) for Field
    main.o(.text.updateTail) refers to main.o(.bss.i) for i
    main.o(.text.updateTail) refers to main.o(.bss.j) for j
    main.o(.ARM.exidx.text.updateTail) refers to main.o(.text.updateTail) for [Anonymous Symbol]
    main.o(.text.main) refers to uart.o(.text.uart0_init) for uart0_init
    main.o(.text.main) refers to main.o(.bss.xTask1Handle) for xTask1Handle
    main.o(.text.main) refers to main.o(.text.vTask1) for vTask1
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.vTask1) refers to uart.o(.text.clear) for clear
    main.o(.text.vTask1) refers to main.o(.rodata.str1.1) for .L.str.9
    main.o(.text.vTask1) refers to uart.o(.text.print) for print
    main.o(.text.vTask1) refers to main.o(.bss.received_char) for received_char
    main.o(.text.vTask1) refers to main.o(.bss.i) for i
    main.o(.text.vTask1) refers to main.o(.bss.Gy) for Gy
    main.o(.text.vTask1) refers to main.o(.text.vTask2) for vTask2
    main.o(.text.vTask1) refers to main.o(.bss.xTask2Handle) for xTask2Handle
    main.o(.text.vTask1) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.vTask1) refers to main.o(.bss.Field) for Field
    main.o(.text.vTask1) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    main.o(.text.vTask1) refers to main.o(.bss.j) for j
    main.o(.text.vTask1) refers to main.o(.bss.x) for x
    main.o(.text.vTask1) refers to main.o(.bss.y) for y
    main.o(.text.vTask1) refers to main.o(.bss.head) for head
    main.o(.text.vTask1) refers to main.o(.bss.tail) for tail
    main.o(.text.vTask1) refers to main.o(.bss.power) for power
    main.o(.text.vTask1) refers to main.o(.bss.dir) for dir
    main.o(.text.vTask1) refers to main.o(.bss.score) for score
    main.o(.text.vTask1) refers to main.o(.bss.Game) for Game
    main.o(.text.vTask1) refers to main.o(.bss.speedOffset) for speedOffset
    main.o(.text.vTask1) refers to main.o(.bss.xTask1Handle) for xTask1Handle
    main.o(.text.vTask1) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.ARM.exidx.text.vTask1) refers to main.o(.text.vTask1) for [Anonymous Symbol]
    main.o(.text.vTask2) refers to main.o(.bss.a) for a
    main.o(.text.vTask2) refers to main.o(.bss.power) for power
    main.o(.text.vTask2) refers to main.o(.bss.Field) for Field
    main.o(.text.vTask2) refers to main.o(.bss.tail) for tail
    main.o(.text.vTask2) refers to main.o(.bss.speedOffset) for speedOffset
    main.o(.text.vTask2) refers to main.o(.rodata.str1.1) for .L.str.13
    main.o(.text.vTask2) refers to main.o(.text.printField) for printField
    main.o(.text.vTask2) refers to rand.o(.emb_text) for rand
    main.o(.text.vTask2) refers to main.o(.bss.b) for b
    main.o(.text.vTask2) refers to main.o(.bss.dir) for dir
    main.o(.text.vTask2) refers to main.o(.text.movement) for movement
    main.o(.text.vTask2) refers to main.o(.bss.i) for i
    main.o(.text.vTask2) refers to main.o(.bss.j) for j
    main.o(.text.vTask2) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.vTask2) refers to uart.o(.text.clear) for clear
    main.o(.text.vTask2) refers to uart.o(.text.print) for print
    main.o(.ARM.exidx.text.vTask2) refers to main.o(.text.vTask2) for [Anonymous Symbol]
    main.o(.text.UART0_Handler) refers to main.o(.bss.received_char) for received_char
    main.o(.text.UART0_Handler) refers to main.o(.bss.Game) for Game
    main.o(.text.UART0_Handler) refers to main.o(.text.movement) for movement
    main.o(.text.UART0_Handler) refers to main.o(.bss.tail) for tail
    main.o(.text.UART0_Handler) refers to main.o(.bss.Field) for Field
    main.o(.text.UART0_Handler) refers to main.o(.bss.i) for i
    main.o(.text.UART0_Handler) refers to main.o(.bss.j) for j
    main.o(.ARM.exidx.text.UART0_Handler) refers to main.o(.text.UART0_Handler) for [Anonymous Symbol]
    uart.o(.text.uart0_init) refers to dflt_clz.o(x$fpl$dfltu) for __aeabi_ui2d
    uart.o(.text.uart0_init) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    uart.o(.text.uart0_init) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    uart.o(.text.uart0_init) refers to d2f.o(x$fpl$d2f) for __aeabi_d2f
    uart.o(.text.uart0_init) refers to ffix.o(x$fpl$ffix) for __aeabi_f2iz
    uart.o(.text.uart0_init) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    uart.o(.text.uart0_init) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    uart.o(.text.uart0_init) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    uart.o(.text.uart0_init) refers to f2d.o(x$fpl$f2d) for __aeabi_f2d
    uart.o(.text.uart0_init) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    uart.o(.text.uart0_init) refers to dfix.o(x$fpl$dfix) for __aeabi_d2iz
    uart.o(.ARM.exidx.text.uart0_init) refers to uart.o(.text.uart0_init) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.uart0_putchar) refers to uart.o(.text.uart0_putchar) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.readChar) refers to uart.o(.text.readChar) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.printIntHelper) refers to uart.o(.text.printIntHelper) for [Anonymous Symbol]
    uart.o(.text.printInt) refers to uart.o(.text.printIntHelper) for printIntHelper
    uart.o(.ARM.exidx.text.printInt) refers to uart.o(.text.printInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.printChar) refers to uart.o(.text.printChar) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.print) refers to uart.o(.text.print) for [Anonymous Symbol]
    uart.o(.text.itoa) refers to uart.o(.bss.loops) for loops
    uart.o(.text.itoa) refers to uart.o(.bss.itoa.buf) for itoa.buf
    uart.o(.text.itoa) refers to uart.o(.rodata.str1.1) for .L.str
    uart.o(.text.itoa) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    uart.o(.ARM.exidx.text.itoa) refers to uart.o(.text.itoa) for [Anonymous Symbol]
    uart.o(.text.print_idec) refers to uart.o(.bss.loops) for loops
    uart.o(.text.print_idec) refers to uart.o(.bss.itoa.buf) for itoa.buf
    uart.o(.text.print_idec) refers to uart.o(.rodata.str1.1) for .L.str
    uart.o(.text.print_idec) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    uart.o(.ARM.exidx.text.print_idec) refers to uart.o(.text.print_idec) for [Anonymous Symbol]
    uart.o(.text.clear) refers to uart.o(.rodata.str1.1) for .L.str.1
    uart.o(.ARM.exidx.text.clear) refers to uart.o(.text.clear) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(RESET) refers to main.o(.text.UART0_Handler) for UART0_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.rodata..Lswitch.table.SystemCoreClockUpdate.1) for .Lswitch.table.SystemCoreClockUpdate.1
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueCreateMutex) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueCreateMutex) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueCreateMutex) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.xTaskCreate) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvIdleTask) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvIdleTask) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.xTimerCreateTimerTask) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.xTimerCreateTimerTask) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.xTimerCreateTimerTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvTimerTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.text.prvTimerTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvTimerTask) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvTimerTask) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvTimerTask) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.xTimerCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.xTimerCreate) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.xTimerCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.xTimerCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    tolower.o(.text) refers to rt_ctype_table.o(.text) for __rt_ctype_table
    rand.o(.emb_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_rand_2
    rand.o(.emb_text) refers to rand.o(.text) for _rand_init
    rand.o(.emb_text) refers to rand.o(.bss) for _random_number_data
    rand.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_rand_2
    rand.o(.text) refers to rand.o(.bss) for .bss
    rand.o(.bss) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_rand_2
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    d2f.o(x$fpl$d2f) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    d2f.o(x$fpl$d2f) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    d2f.o(x$fpl$d2f) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    daddsub_clz.o(x$fpl$dadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$dadd) refers to daddsub_clz.o(x$fpl$dsub) for _dsub1
    daddsub_clz.o(x$fpl$dadd) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    daddsub_clz.o(x$fpl$dadd) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    daddsub_clz.o(x$fpl$drsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$drsb) refers to daddsub_clz.o(x$fpl$dadd) for _dadd1
    daddsub_clz.o(x$fpl$drsb) refers to daddsub_clz.o(x$fpl$dsub) for _dsub1
    daddsub_clz.o(x$fpl$dsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$dsub) refers to daddsub_clz.o(x$fpl$dadd) for _dadd1
    daddsub_clz.o(x$fpl$dsub) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    ddiv.o(x$fpl$drdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$drdiv) refers to ddiv.o(x$fpl$ddiv) for ddiv_entry
    ddiv.o(x$fpl$ddiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$ddiv) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    ddiv.o(x$fpl$ddiv) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfix.o(x$fpl$dfix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfix) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfix.o(x$fpl$dfixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfixr) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dflt_clz.o(x$fpl$dfltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dfltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    dmul.o(x$fpl$dmul) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    f2d.o(x$fpl$f2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    f2d.o(x$fpl$f2d) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    f2d.o(x$fpl$f2d) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    faddsub_clz.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$fadd) refers to faddsub_clz.o(x$fpl$fsub) for _fsub1
    faddsub_clz.o(x$fpl$fadd) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    faddsub_clz.o(x$fpl$fadd) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    faddsub_clz.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$frsb) refers to faddsub_clz.o(x$fpl$fadd) for _fadd1
    faddsub_clz.o(x$fpl$frsb) refers to faddsub_clz.o(x$fpl$fsub) for _fsub1
    faddsub_clz.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$fsub) refers to faddsub_clz.o(x$fpl$fadd) for _fadd1
    faddsub_clz.o(x$fpl$fsub) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    ffix.o(x$fpl$ffix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffix.o(x$fpl$ffix) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    ffix.o(x$fpl$ffixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffix.o(x$fpl$ffixr) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fflt_clz.o(x$fpl$ffltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$fflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$ffltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    fmul.o(x$fpl$fmul) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rt_ctype_table.o(.text) refers to rt_locale_intlibspace.o(.text) for __rt_locale
    rt_ctype_table.o(.text) refers to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    libinit2.o(.ARM.Collect$$libinit$$0000000F) refers (Weak) to rand.o(.text) for _rand_init
    libinit2.o(.ARM.Collect$$libinit$$00000011) refers (Weak) to rt_locale_intlibspace.o(.text) for __rt_locale
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers (Weak) to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fretinf.o(x$fpl$fretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    rt_locale.o(.text) refers to rt_locale.o(.bss) for __rt_locale_data
    rt_locale_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    lc_ctype_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000014) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000014) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers to strcmpv7em.o(.text) for strcmp
    lc_ctype_c.o(locale$$code) refers to lc_ctype_c.o(locale$$data) for __lcctype_c_name
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.text.snakeInit), (190 bytes).
    Removing main.o(.ARM.exidx.text.snakeInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.printField), (8 bytes).
    Removing main.o(.text.randomPower), (144 bytes).
    Removing main.o(.ARM.exidx.text.randomPower), (8 bytes).
    Removing main.o(.ARM.exidx.text.movement), (8 bytes).
    Removing main.o(.ARM.exidx.text.vTask3), (8 bytes).
    Removing main.o(.text.updateTail), (100 bytes).
    Removing main.o(.ARM.exidx.text.updateTail), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.vTask1), (8 bytes).
    Removing main.o(.ARM.exidx.text.vTask2), (8 bytes).
    Removing main.o(.ARM.exidx.text.UART0_Handler), (8 bytes).
    Removing main.o(.bss.var), (4 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.ARM.exidx.text.uart0_init), (8 bytes).
    Removing uart.o(.text.uart0_putchar), (26 bytes).
    Removing uart.o(.ARM.exidx.text.uart0_putchar), (8 bytes).
    Removing uart.o(.text.readChar), (20 bytes).
    Removing uart.o(.ARM.exidx.text.readChar), (8 bytes).
    Removing uart.o(.ARM.exidx.text.printIntHelper), (8 bytes).
    Removing uart.o(.ARM.exidx.text.printInt), (8 bytes).
    Removing uart.o(.text.printChar), (18 bytes).
    Removing uart.o(.ARM.exidx.text.printChar), (8 bytes).
    Removing uart.o(.ARM.exidx.text.print), (8 bytes).
    Removing uart.o(.text.itoa), (128 bytes).
    Removing uart.o(.ARM.exidx.text.itoa), (8 bytes).
    Removing uart.o(.text.print_idec), (182 bytes).
    Removing uart.o(.ARM.exidx.text.print_idec), (8 bytes).
    Removing uart.o(.ARM.exidx.text.clear), (8 bytes).
    Removing uart.o(.bss.loops), (4 bytes).
    Removing uart.o(.bss.itoa.buf), (32 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (280 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_tm4c123.o(.rodata..Lswitch.table.SystemCoreClockUpdate.1), (92 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (38 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (98 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (36 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (156 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (178 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (118 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (580 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (458 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (50 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (392 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (282 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (416 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (268 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (152 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (38 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (30 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (194 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (246 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (398 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (182 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (612 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (1178 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (70 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (294 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (138 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (58 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (300 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (190 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (206 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (150 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (194 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (394 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (402 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (66 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (186 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (104 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (34 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (46 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (46 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (26 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (46 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (70 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).

268 unused section(s) (total 13724 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ctype_table.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/ctype.c                          0x00000000   Number         0  tolower.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_ctype_c.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7em.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/d2f.s                           0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/daddsub.s                       0x00000000   Number         0  daddsub_clz.o ABSOLUTE
    ../fplib/ddiv.s                          0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/dfix.s                          0x00000000   Number         0  dfix.o ABSOLUTE
    ../fplib/dflt.s                          0x00000000   Number         0  dflt_clz.o ABSOLUTE
    ../fplib/dmul.s                          0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/f2d.s                           0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/faddsub.s                       0x00000000   Number         0  faddsub_clz.o ABSOLUTE
    ../fplib/ffix.s                          0x00000000   Number         0  ffix.o ABSOLUTE
    ../fplib/fflt.s                          0x00000000   Number         0  fflt_clz.o ABSOLUTE
    ../fplib/fmul.s                          0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/fnaninf.s                       0x00000000   Number         0  fnaninf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    ../fplib/fretinf.s                       0x00000000   Number         0  fretinf.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000002a8   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x000002c4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000002e0   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x000002e2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x000002e2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x000002e2   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x000002e2   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000002e2   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$0000000F          0x000002e2   Section        4  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    .ARM.Collect$$libinit$$00000010          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000011          0x000002e6   Section        6  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x000002ec   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000014          0x000002ec   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000014)
    .ARM.Collect$$libinit$$00000015          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x000002f8   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x000002fa   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x000002fc   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x000002fc   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x000002fc   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x000002fc   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x000002fc   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x000002fc   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x000002fc   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x000002fe   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000002fe   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000002fe   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x00000304   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x00000304   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000308   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000308   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000310   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000312   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000312   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000316   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x0000031c   Section       52  rand.o(.emb_text)
    .text                                    0x00000350   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000464   Section        0  tolower.o(.text)
    .text                                    0x00000480   Section        0  rand.o(.text)
    .text                                    0x000004bc   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x00000546   Section       16  aeabi_memset4.o(.text)
    .text                                    0x00000556   Section       68  rt_memclr.o(.text)
    .text                                    0x0000059a   Section       78  rt_memclr_w.o(.text)
    .text                                    0x000005e8   Section        0  heapauxi.o(.text)
    .text                                    0x000005f0   Section       16  rt_ctype_table.o(.text)
    .text                                    0x00000600   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x00000664   Section        8  rt_locale_intlibspace.o(.text)
    .text                                    0x0000066c   Section        8  libspace.o(.text)
    .text                                    0x00000674   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x000006be   Section        0  exit.o(.text)
    .text                                    0x000006d0   Section      124  strcmpv7em.o(.text)
    .text                                    0x0000074c   Section        0  sys_exit.o(.text)
    .text                                    0x00000758   Section        2  use_no_semi.o(.text)
    .text                                    0x0000075a   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x00000760   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x000007a0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x000007b0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x000007d0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x000007d4   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000804   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000808   Section        0  main.o(.text.UART0_Handler)
    [Anonymous Symbol]                       0x0000089c   Section        0  uart.o(.text.clear)
    [Anonymous Symbol]                       0x000008e4   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x0000092c   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x00000978   Section        0  main.o(.text.movement)
    [Anonymous Symbol]                       0x00000c84   Section        0  uart.o(.text.print)
    [Anonymous Symbol]                       0x00000cc4   Section        0  main.o(.text.printField)
    [Anonymous Symbol]                       0x00000e00   Section        0  uart.o(.text.printInt)
    [Anonymous Symbol]                       0x00000e30   Section        0  uart.o(.text.printIntHelper)
    prvAddCurrentTaskToDelayedList           0x00000e81   Thumb Code   198  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00000e80   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvIdleTask                              0x00000f49   Thumb Code   322  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00000f48   Section        0  tasks.o(.text.prvIdleTask)
    prvNotifyQueueSetContainer               0x0000108d   Thumb Code   204  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x0000108c   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00001159   Thumb Code    32  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00001158   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x00001179   Thumb Code   130  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x00001178   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvTaskExitError                         0x000011fd   Thumb Code    50  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x000011fc   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00001231   Thumb Code   582  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00001230   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00001479   Thumb Code   134  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001478   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001500   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x000016a4   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x000016c4   Section        0  uart.o(.text.uart0_init)
    [Anonymous Symbol]                       0x000017dc   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00001800   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x0000180c   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00001824   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x0000182c   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x00001868   Section        0  list.o(.text.vListInsertEnd)
    [Anonymous Symbol]                       0x00001884   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x000018cc   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x000018fc   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x000019bc   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00001a20   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x00001b34   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x00001b78   Section        0  main.o(.text.vTask1)
    [Anonymous Symbol]                       0x00001d14   Section        0  main.o(.text.vTask2)
    [Anonymous Symbol]                       0x00001e2c   Section        0  main.o(.text.vTask3)
    [Anonymous Symbol]                       0x0000200c   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x0000205c   Section        0  tasks.o(.text.vTaskDelete)
    [Anonymous Symbol]                       0x00002180   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x0000219c   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x000021ac   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x000021e0   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x00002250   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x000022ec   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x00002380   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00002390   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002390   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002418   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x000024f4   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x0000259c   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00002744   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x000027f4   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x000029f8   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00002a20   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x00002a2c   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00002be8   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00002cb0   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00002dd4   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00002f58   Section        0  timers.o(.text.xTimerCreateTimerTask)
    locale$$code                             0x00002ffc   Section       44  lc_ctype_c.o(locale$$code)
    x$fpl$d2f                                0x00003028   Section       98  d2f.o(x$fpl$d2f)
    x$fpl$dadd                               0x0000308c   Section      336  daddsub_clz.o(x$fpl$dadd)
    _dadd1                                   0x0000309d   Thumb Code     0  daddsub_clz.o(x$fpl$dadd)
    x$fpl$ddiv                               0x000031dc   Section      692  ddiv.o(x$fpl$ddiv)
    ddiv_entry                               0x000031e3   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    x$fpl$dfix                               0x00003490   Section       94  dfix.o(x$fpl$dfix)
    x$fpl$dfltu                              0x000034ee   Section       38  dflt_clz.o(x$fpl$dfltu)
    x$fpl$dmul                               0x00003514   Section      340  dmul.o(x$fpl$dmul)
    x$fpl$dnaninf                            0x00003668   Section      156  dnaninf.o(x$fpl$dnaninf)
    x$fpl$dretinf                            0x00003704   Section       12  dretinf.o(x$fpl$dretinf)
    x$fpl$dsub                               0x00003710   Section      476  daddsub_clz.o(x$fpl$dsub)
    _dsub1                                   0x00003721   Thumb Code     0  daddsub_clz.o(x$fpl$dsub)
    x$fpl$f2d                                0x000038ec   Section       86  f2d.o(x$fpl$f2d)
    x$fpl$fadd                               0x00003944   Section      196  faddsub_clz.o(x$fpl$fadd)
    _fadd1                                   0x00003953   Thumb Code     0  faddsub_clz.o(x$fpl$fadd)
    x$fpl$ffix                               0x00003a08   Section       54  ffix.o(x$fpl$ffix)
    x$fpl$fflt                               0x00003a40   Section       48  fflt_clz.o(x$fpl$fflt)
    x$fpl$fmul                               0x00003a70   Section      258  fmul.o(x$fpl$fmul)
    x$fpl$fnaninf                            0x00003b72   Section      140  fnaninf.o(x$fpl$fnaninf)
    x$fpl$fretinf                            0x00003bfe   Section       10  fretinf.o(x$fpl$fretinf)
    x$fpl$fsub                               0x00003c08   Section      234  faddsub_clz.o(x$fpl$fsub)
    _fsub1                                   0x00003c17   Thumb Code     0  faddsub_clz.o(x$fpl$fsub)
    .L.str.2                                 0x00003cf2   Data           2  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003cf2   Section        0  main.o(.rodata.str1.1)
    x$fpl$usenofp                            0x00003cf2   Section        0  usenofp.o(x$fpl$usenofp)
    .L.str.9                                 0x00003cf4   Data          59  main.o(.rodata.str1.1)
    .L.str.19                                0x00003d2f   Data          29  main.o(.rodata.str1.1)
    .L.str.11                                0x00003d4c   Data          69  main.o(.rodata.str1.1)
    .L.str.18                                0x00003d91   Data          38  main.o(.rodata.str1.1)
    .L.str                                   0x00003db7   Data           2  main.o(.rodata.str1.1)
    .L.str.13                                0x00003db9   Data           7  main.o(.rodata.str1.1)
    .L.str.7                                 0x00003dc0   Data          10  main.o(.rodata.str1.1)
    .L.str                                   0x00003dca   Data          17  uart.o(.rodata.str1.1)
    .L.str.1                                 0x00003dca   Data           3  uart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003dca   Section        0  uart.o(.rodata.str1.1)
    locale$$data                             0x00003df4   Section      272  lc_ctype_c.o(locale$$data)
    __lcctype_c_name                         0x00003df8   Data           2  lc_ctype_c.o(locale$$data)
    __lcctype_c_start                        0x00003e00   Data           0  lc_ctype_c.o(locale$$data)
    __lcctype_c_end                          0x00003f04   Data           0  lc_ctype_c.o(locale$$data)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000008   Section      228  rand.o(.bss)
    .bss                                     0x200000ec   Section       96  libspace.o(.bss)
    prvSampleTimeNow.xLastTime               0x20000df4   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000df4   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x20000df8   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20000dfc   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000dfc   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20000e00   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000e00   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20000e04   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20000e04   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000e08   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000e08   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000e0c   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000e0c   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20000e10   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000e10   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000e84   Data       16384  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000e84   Section        0  heap_4.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20004e84   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20004e84   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x20004e88   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x20004e88   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x20004e8c   Data           1  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x20004e8c   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x20004e90   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x20004e90   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x20004e94   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20004e94   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20004e98   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20004e98   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20004e9c   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20004e9c   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20004ea0   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20004ea0   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20004ea4   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20004ea4   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20004eac   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20004eac   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20004ec0   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20004ec0   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20004ed4   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20004ed4   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20004ee8   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20004ee8   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20004efc   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20004efc   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20004f00   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20004f00   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x20004f04   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x20004f04   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xMinimumEverFreeBytesRemaining           0x20004f08   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20004f08   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20004f0c   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20004f0c   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20004f10   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20004f10   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20004f14   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20004f14   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20004f18   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20004f18   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20004f1c   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20004f1c   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20004f20   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20004f20   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20004f34   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20004f34   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20004f38   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20004f38   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20004f40   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20004f40   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20004f60   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20004f60   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20004f74   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20004f74   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20004f78   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20004f78   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20004f7c   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20004f7c   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20004f80   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20004f80   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20004f88   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20004f88   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20004f88   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20004f88   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20005188   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000002a9   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x000002c5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x000002e1   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x000002e3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_1                     0x000002e3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_preinit_1                  0x000002e3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_2                     0x000002e3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    __rt_lib_init_relocate_pie_1             0x000002e3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_user_alloc_1               0x000002e3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_lc_common                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_rand_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_lc_collate_1               0x000002ed   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_2                 0x000002ed   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000014)
    __rt_lib_init_alloca_1                   0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_lc_ctype_1                 0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_return                     0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_shutdown                        0x000002fb   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x000002fd   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x000002fd   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x000002fd   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x000002fd   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x000002fd   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x000002fd   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x000002fd   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x000002ff   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000002ff   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000002ff   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x00000305   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x00000305   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000309   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000309   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x00000311   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000313   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000313   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000317   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    rand                                     0x0000031d   Thumb Code    48  rand.o(.emb_text)
    Reset_Handler                            0x00000351   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x000003ff   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x00000401   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x00000403   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x00000405   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x00000407   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x00000409   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x0000040b   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x0000040d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x0000040f   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x00000411   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x00000413   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x00000415   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x00000417   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x00000419   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x0000041b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x0000041d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x0000041f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000421   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x00000423   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x00000425   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x00000427   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x00000429   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x0000042b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x0000042d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x0000042f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000431   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x00000433   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000435   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x00000437   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x00000439   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x0000043b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x0000043d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x0000043f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000441   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000445   Thumb Code     0  startup_tm4c123.o(.text)
    tolower                                  0x00000465   Thumb Code    26  tolower.o(.text)
    srand                                    0x00000481   Thumb Code    42  rand.o(.text)
    _rand_init                               0x000004ab   Thumb Code     4  rand.o(.text)
    __aeabi_memcpy                           0x000004bd   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x000004bd   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x00000523   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x00000547   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x00000547   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x00000557   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x00000557   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x0000055b   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x0000059b   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x0000059b   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x0000059b   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x0000059f   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x000005e9   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x000005eb   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x000005ed   Thumb Code     2  heapauxi.o(.text)
    __rt_ctype_table                         0x000005f1   Thumb Code    16  rt_ctype_table.o(.text)
    __aeabi_memcpy4                          0x00000601   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000601   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000601   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x00000649   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_locale                              0x00000665   Thumb Code     8  rt_locale_intlibspace.o(.text)
    __user_libspace                          0x0000066d   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x0000066d   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x0000066d   Thumb Code     0  libspace.o(.text)
    __user_setup_stackheap                   0x00000675   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x000006bf   Thumb Code    18  exit.o(.text)
    strcmp                                   0x000006d1   Thumb Code   124  strcmpv7em.o(.text)
    _sys_exit                                0x0000074d   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000759   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000759   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0000075b   Thumb Code     0  indicate_semi.o(.text)
    PendSV_Handler                           0x00000761   Thumb Code    68  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x000007b1   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x000007d5   Thumb Code    46  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000805   Thumb Code     2  system_tm4c123.o(.text.SystemInit)
    UART0_Handler                            0x00000809   Thumb Code   148  main.o(.text.UART0_Handler)
    clear                                    0x0000089d   Thumb Code    72  uart.o(.text.clear)
    eTaskConfirmSleepModeStatus              0x000008e5   Thumb Code    72  tasks.o(.text.eTaskConfirmSleepModeStatus)
    main                                     0x0000092d   Thumb Code    64  main.o(.text.main)
    movement                                 0x00000979   Thumb Code   780  main.o(.text.movement)
    print                                    0x00000c85   Thumb Code    64  uart.o(.text.print)
    printField                               0x00000cc5   Thumb Code   268  main.o(.text.printField)
    printInt                                 0x00000e01   Thumb Code    48  uart.o(.text.printInt)
    printIntHelper                           0x00000e31   Thumb Code    80  uart.o(.text.printIntHelper)
    pvPortMalloc                             0x00001501   Thumb Code   418  heap_4.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x000016a5   Thumb Code    32  port.o(.text.pxPortInitialiseStack)
    uart0_init                               0x000016c5   Thumb Code   278  uart.o(.text.uart0_init)
    uxListRemove                             0x000017dd   Thumb Code    36  list.o(.text.uxListRemove)
    uxTaskGetNumberOfTasks                   0x00001801   Thumb Code    12  tasks.o(.text.uxTaskGetNumberOfTasks)
    vListInitialise                          0x0000180d   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00001825   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x0000182d   Thumb Code    58  list.o(.text.vListInsert)
    vListInsertEnd                           0x00001869   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x00001885   Thumb Code    70  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x000018cd   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x000018fd   Thumb Code   192  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x000019bd   Thumb Code   100  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x00001a21   Thumb Code   276  port.o(.text.vPortSuppressTicksAndSleep)
    vQueueWaitForMessageRestricted           0x00001b35   Thumb Code    68  queue.o(.text.vQueueWaitForMessageRestricted)
    vTask1                                   0x00001b79   Thumb Code   312  main.o(.text.vTask1)
    vTask2                                   0x00001d15   Thumb Code   278  main.o(.text.vTask2)
    vTask3                                   0x00001e2d   Thumb Code   364  main.o(.text.vTask3)
    vTaskDelay                               0x0000200d   Thumb Code    80  tasks.o(.text.vTaskDelay)
    vTaskDelete                              0x0000205d   Thumb Code   290  tasks.o(.text.vTaskDelete)
    vTaskInternalSetTimeOutState             0x00002181   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x0000219d   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x000021ad   Thumb Code    50  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x000021e1   Thumb Code   110  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x00002251   Thumb Code   148  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x000022ed   Thumb Code   146  tasks.o(.text.vTaskStepTick)
    vTaskSuspendAll                          0x00002381   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00002391   Thumb Code   134  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x00002419   Thumb Code   218  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x000024f5   Thumb Code   168  queue.o(.text.xQueueGenericCreate)
    xQueueReceive                            0x0000259d   Thumb Code   424  queue.o(.text.xQueueReceive)
    xTaskCheckForTimeOut                     0x00002745   Thumb Code   176  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x000027f5   Thumb Code   516  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x000029f9   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00002a21   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x00002a2d   Thumb Code   442  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00002be9   Thumb Code   198  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x00002cb1   Thumb Code   292  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00002dd5   Thumb Code   388  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00002f59   Thumb Code   156  timers.o(.text.xTimerCreateTimerTask)
    _get_lc_ctype                            0x00002ffd   Thumb Code    44  lc_ctype_c.o(locale$$code)
    __aeabi_d2f                              0x00003029   Thumb Code     0  d2f.o(x$fpl$d2f)
    _d2f                                     0x00003029   Thumb Code    98  d2f.o(x$fpl$d2f)
    __aeabi_dadd                             0x0000308d   Thumb Code     0  daddsub_clz.o(x$fpl$dadd)
    _dadd                                    0x0000308d   Thumb Code   332  daddsub_clz.o(x$fpl$dadd)
    __aeabi_ddiv                             0x000031dd   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    _ddiv                                    0x000031dd   Thumb Code   556  ddiv.o(x$fpl$ddiv)
    __aeabi_d2iz                             0x00003491   Thumb Code     0  dfix.o(x$fpl$dfix)
    _dfix                                    0x00003491   Thumb Code    94  dfix.o(x$fpl$dfix)
    __aeabi_ui2d                             0x000034ef   Thumb Code     0  dflt_clz.o(x$fpl$dfltu)
    _dfltu                                   0x000034ef   Thumb Code    38  dflt_clz.o(x$fpl$dfltu)
    __aeabi_dmul                             0x00003515   Thumb Code     0  dmul.o(x$fpl$dmul)
    _dmul                                    0x00003515   Thumb Code   332  dmul.o(x$fpl$dmul)
    __fpl_dnaninf                            0x00003669   Thumb Code   156  dnaninf.o(x$fpl$dnaninf)
    __fpl_dretinf                            0x00003705   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    __aeabi_dsub                             0x00003711   Thumb Code     0  daddsub_clz.o(x$fpl$dsub)
    _dsub                                    0x00003711   Thumb Code   472  daddsub_clz.o(x$fpl$dsub)
    __aeabi_f2d                              0x000038ed   Thumb Code     0  f2d.o(x$fpl$f2d)
    _f2d                                     0x000038ed   Thumb Code    86  f2d.o(x$fpl$f2d)
    __aeabi_fadd                             0x00003945   Thumb Code     0  faddsub_clz.o(x$fpl$fadd)
    _fadd                                    0x00003945   Thumb Code   196  faddsub_clz.o(x$fpl$fadd)
    __aeabi_f2iz                             0x00003a09   Thumb Code     0  ffix.o(x$fpl$ffix)
    _ffix                                    0x00003a09   Thumb Code    54  ffix.o(x$fpl$ffix)
    __aeabi_i2f                              0x00003a41   Thumb Code     0  fflt_clz.o(x$fpl$fflt)
    _fflt                                    0x00003a41   Thumb Code    48  fflt_clz.o(x$fpl$fflt)
    __aeabi_fmul                             0x00003a71   Thumb Code     0  fmul.o(x$fpl$fmul)
    _fmul                                    0x00003a71   Thumb Code   258  fmul.o(x$fpl$fmul)
    __fpl_fnaninf                            0x00003b73   Thumb Code   140  fnaninf.o(x$fpl$fnaninf)
    __fpl_fretinf                            0x00003bff   Thumb Code    10  fretinf.o(x$fpl$fretinf)
    __aeabi_fsub                             0x00003c09   Thumb Code     0  faddsub_clz.o(x$fpl$fsub)
    _fsub                                    0x00003c09   Thumb Code   234  faddsub_clz.o(x$fpl$fsub)
    __I$use$fp                               0x00003cf2   Number         0  usenofp.o(x$fpl$usenofp)
    uxTopUsedPriority                        0x00003dd0   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00003dd4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00003df4   Number         0  anon$$obj.o(Region$$Table)
    __ctype                                  0x00003e01   Data           0  lc_ctype_c.o(locale$$data)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    _random_number_data                      0x20000008   Data         228  rand.o(.bss)
    __libspace_start                         0x200000ec   Data          96  libspace.o(.bss)
    Field                                    0x2000014c   Data        3200  main.o(.bss.Field)
    __temporary_stack_top$libspace           0x2000014c   Data           0  libspace.o(.bss)
    Game                                     0x20000dcc   Data           4  main.o(.bss.Game)
    Gy                                       0x20000dd0   Data           4  main.o(.bss.Gy)
    a                                        0x20000dd4   Data           4  main.o(.bss.a)
    b                                        0x20000dd8   Data           4  main.o(.bss.b)
    dir                                      0x20000ddc   Data           4  main.o(.bss.dir)
    head                                     0x20000de0   Data           4  main.o(.bss.head)
    highScore                                0x20000de4   Data           4  main.o(.bss.highScore)
    i                                        0x20000de8   Data           4  main.o(.bss.i)
    j                                        0x20000dec   Data           4  main.o(.bss.j)
    power                                    0x20000df0   Data           4  main.o(.bss.power)
    pxCurrentTCB                             0x20000df8   Data           4  tasks.o(.bss.pxCurrentTCB)
    received_char                            0x20000e74   Data           1  main.o(.bss.received_char)
    score                                    0x20000e78   Data           4  main.o(.bss.score)
    speedOffset                              0x20000e7c   Data           4  main.o(.bss.speedOffset)
    tail                                     0x20000e80   Data           4  main.o(.bss.tail)
    x                                        0x20004ea8   Data           4  main.o(.bss.x)
    xTask1Handle                             0x20004f54   Data           4  main.o(.bss.xTask1Handle)
    xTask2Handle                             0x20004f58   Data           4  main.o(.bss.xTask2Handle)
    xTask3Handle                             0x20004f5c   Data           4  main.o(.bss.xTask3Handle)
    y                                        0x20004f84   Data           4  main.o(.bss.y)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000351

  Load Region LR_1 (Base: 0x00000000, Size: 0x00003f0c, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00003f04, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO           85    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO          490  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO          732    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000001a   Code   RO          734    !!handler_copy      c_w.l(__scatter_copy.o)
    0x000002c2   0x000002c2   0x00000002   PAD
    0x000002c4   0x000002c4   0x0000001c   Code   RO          736    !!handler_zi        c_w.l(__scatter_zi.o)
    0x000002e0   0x000002e0   0x00000002   Code   RO          652    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x000002e2   0x000002e2   0x00000000   Code   RO          546    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x000002e2   0x000002e2   0x00000000   Code   RO          548    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x000002e2   0x000002e2   0x00000000   Code   RO          550    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x000002e2   0x000002e2   0x00000000   Code   RO          553    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x000002e2   0x000002e2   0x00000000   Code   RO          555    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x000002e2   0x000002e2   0x00000004   Code   RO          556    .ARM.Collect$$libinit$$0000000F  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          557    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000006   Code   RO          558    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO          560    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x000002ec   0x000002ec   0x0000000c   Code   RO          561    .ARM.Collect$$libinit$$00000014  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          562    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          564    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          566    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          568    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          570    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          572    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          574    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          576    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          578    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          580    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          584    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          586    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          588    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          590    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000002   Code   RO          591    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x000002fa   0x000002fa   0x00000002   Code   RO          699    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x000002fc   0x000002fc   0x00000000   Code   RO          715    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x000002fc   0x000002fc   0x00000000   Code   RO          717    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x000002fc   0x000002fc   0x00000000   Code   RO          720    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x000002fc   0x000002fc   0x00000000   Code   RO          723    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x000002fc   0x000002fc   0x00000000   Code   RO          725    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x000002fc   0x000002fc   0x00000000   Code   RO          728    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x000002fc   0x000002fc   0x00000002   Code   RO          729    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x000002fe   0x000002fe   0x00000000   Code   RO          536    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x000002fe   0x000002fe   0x00000000   Code   RO          602    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x000002fe   0x000002fe   0x00000006   Code   RO          614    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x00000304   0x00000304   0x00000000   Code   RO          604    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x00000304   0x00000304   0x00000004   Code   RO          605    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          607    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x00000308   0x00000308   0x00000008   Code   RO          608    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x00000310   0x00000310   0x00000002   Code   RO          657    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000312   0x00000312   0x00000000   Code   RO          679    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000312   0x00000312   0x00000004   Code   RO          680    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000316   0x00000316   0x00000006   Code   RO          681    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000031c   0x0000031c   0x00000034   Code   RO          473    .emb_text           c_w.l(rand.o)
    0x00000350   0x00000350   0x00000114   Code   RO           86  * .text               startup_tm4c123.o
    0x00000464   0x00000464   0x0000001a   Code   RO          471    .text               c_w.l(tolower.o)
    0x0000047e   0x0000047e   0x00000002   PAD
    0x00000480   0x00000480   0x0000003c   Code   RO          474    .text               c_w.l(rand.o)
    0x000004bc   0x000004bc   0x0000008a   Code   RO          480    .text               c_w.l(rt_memcpy_v6.o)
    0x00000546   0x00000546   0x00000010   Code   RO          482    .text               c_w.l(aeabi_memset4.o)
    0x00000556   0x00000556   0x00000044   Code   RO          484    .text               c_w.l(rt_memclr.o)
    0x0000059a   0x0000059a   0x0000004e   Code   RO          486    .text               c_w.l(rt_memclr_w.o)
    0x000005e8   0x000005e8   0x00000006   Code   RO          488    .text               c_w.l(heapauxi.o)
    0x000005ee   0x000005ee   0x00000002   PAD
    0x000005f0   0x000005f0   0x00000010   Code   RO          537    .text               c_w.l(rt_ctype_table.o)
    0x00000600   0x00000600   0x00000064   Code   RO          543    .text               c_w.l(rt_memcpy_w.o)
    0x00000664   0x00000664   0x00000008   Code   RO          621    .text               c_w.l(rt_locale_intlibspace.o)
    0x0000066c   0x0000066c   0x00000008   Code   RO          630    .text               c_w.l(libspace.o)
    0x00000674   0x00000674   0x0000004a   Code   RO          633    .text               c_w.l(sys_stackheap_outer.o)
    0x000006be   0x000006be   0x00000012   Code   RO          635    .text               c_w.l(exit.o)
    0x000006d0   0x000006d0   0x0000007c   Code   RO          641    .text               c_w.l(strcmpv7em.o)
    0x0000074c   0x0000074c   0x0000000c   Code   RO          671    .text               c_w.l(sys_exit.o)
    0x00000758   0x00000758   0x00000002   Code   RO          675    .text               c_w.l(use_no_semi.o)
    0x0000075a   0x0000075a   0x00000000   Code   RO          677    .text               c_w.l(indicate_semi.o)
    0x0000075a   0x0000075a   0x00000006   PAD
    0x00000760   0x00000760   0x00000044   Code   RO          144    .text.PendSV_Handler  port.o
    0x000007a4   0x000007a4   0x0000000c   PAD
    0x000007b0   0x000007b0   0x00000024   Code   RO          130    .text.SVC_Handler   port.o
    0x000007d4   0x000007d4   0x0000002e   Code   RO          146    .text.SysTick_Handler  port.o
    0x00000802   0x00000802   0x00000002   PAD
    0x00000804   0x00000804   0x00000002   Code   RO           95    .text.SystemInit    system_tm4c123.o
    0x00000806   0x00000806   0x00000002   PAD
    0x00000808   0x00000808   0x00000094   Code   RO           20    .text.UART0_Handler  main.o
    0x0000089c   0x0000089c   0x00000048   Code   RO           71    .text.clear         uart.o
    0x000008e4   0x000008e4   0x00000048   Code   RO          349    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x0000092c   0x0000092c   0x0000004c   Code   RO           14    .text.main          main.o
    0x00000978   0x00000978   0x0000030c   Code   RO            8    .text.movement      main.o
    0x00000c84   0x00000c84   0x00000040   Code   RO           65    .text.print         uart.o
    0x00000cc4   0x00000cc4   0x0000013c   Code   RO            4    .text.printField    main.o
    0x00000e00   0x00000e00   0x00000030   Code   RO           61    .text.printInt      uart.o
    0x00000e30   0x00000e30   0x00000050   Code   RO           59    .text.printIntHelper  uart.o
    0x00000e80   0x00000e80   0x000000c6   Code   RO          277    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00000f46   0x00000f46   0x00000002   PAD
    0x00000f48   0x00000f48   0x00000142   Code   RO          301    .text.prvIdleTask   tasks.o
    0x0000108a   0x0000108a   0x00000002   PAD
    0x0000108c   0x0000108c   0x000000cc   Code   RO          215    .text.prvNotifyQueueSetContainer  queue.o
    0x00001158   0x00001158   0x00000020   Code   RO          136    .text.prvPortStartFirstTask  port.o
    0x00001178   0x00001178   0x00000082   Code   RO          451    .text.prvProcessExpiredTimer  timers.o
    0x000011fa   0x000011fa   0x00000002   PAD
    0x000011fc   0x000011fc   0x00000032   Code   RO          128    .text.prvTaskExitError  port.o
    0x0000122e   0x0000122e   0x00000002   PAD
    0x00001230   0x00001230   0x00000246   Code   RO          417    .text.prvTimerTask  timers.o
    0x00001476   0x00001476   0x00000002   PAD
    0x00001478   0x00001478   0x00000086   Code   RO          217    .text.prvUnlockQueue  queue.o
    0x000014fe   0x000014fe   0x00000002   PAD
    0x00001500   0x00001500   0x000001a2   Code   RO          166    .text.pvPortMalloc  heap_4.o
    0x000016a2   0x000016a2   0x00000002   PAD
    0x000016a4   0x000016a4   0x00000020   Code   RO          126    .text.pxPortInitialiseStack  port.o
    0x000016c4   0x000016c4   0x00000116   Code   RO           53    .text.uart0_init    uart.o
    0x000017da   0x000017da   0x00000002   PAD
    0x000017dc   0x000017dc   0x00000024   Code   RO          116    .text.uxListRemove  list.o
    0x00001800   0x00001800   0x0000000c   Code   RO          311    .text.uxTaskGetNumberOfTasks  tasks.o
    0x0000180c   0x0000180c   0x00000016   Code   RO          108    .text.vListInitialise  list.o
    0x00001822   0x00001822   0x00000002   PAD
    0x00001824   0x00001824   0x00000006   Code   RO          110    .text.vListInitialiseItem  list.o
    0x0000182a   0x0000182a   0x00000002   PAD
    0x0000182c   0x0000182c   0x0000003a   Code   RO          114    .text.vListInsert   list.o
    0x00001866   0x00001866   0x00000002   PAD
    0x00001868   0x00001868   0x0000001c   Code   RO          112    .text.vListInsertEnd  list.o
    0x00001884   0x00001884   0x00000046   Code   RO          140    .text.vPortEnterCritical  port.o
    0x000018ca   0x000018ca   0x00000002   PAD
    0x000018cc   0x000018cc   0x0000002e   Code   RO          142    .text.vPortExitCritical  port.o
    0x000018fa   0x000018fa   0x00000002   PAD
    0x000018fc   0x000018fc   0x000000c0   Code   RO          168    .text.vPortFree     heap_4.o
    0x000019bc   0x000019bc   0x00000064   Code   RO          134    .text.vPortSetupTimerInterrupt  port.o
    0x00001a20   0x00001a20   0x00000114   Code   RO          148    .text.vPortSuppressTicksAndSleep  port.o
    0x00001b34   0x00001b34   0x00000044   Code   RO          249    .text.vQueueWaitForMessageRestricted  queue.o
    0x00001b78   0x00001b78   0x0000019c   Code   RO           16    .text.vTask1        main.o
    0x00001d14   0x00001d14   0x00000116   Code   RO           18    .text.vTask2        main.o
    0x00001e2a   0x00001e2a   0x00000002   PAD
    0x00001e2c   0x00001e2c   0x000001e0   Code   RO           10    .text.vTask3        main.o
    0x0000200c   0x0000200c   0x00000050   Code   RO          281    .text.vTaskDelay    tasks.o
    0x0000205c   0x0000205c   0x00000122   Code   RO          271    .text.vTaskDelete   tasks.o
    0x0000217e   0x0000217e   0x00000002   PAD
    0x00002180   0x00002180   0x0000001a   Code   RO          339    .text.vTaskInternalSetTimeOutState  tasks.o
    0x0000219a   0x0000219a   0x00000002   PAD
    0x0000219c   0x0000219c   0x0000000e   Code   RO          343    .text.vTaskMissedYield  tasks.o
    0x000021aa   0x000021aa   0x00000002   PAD
    0x000021ac   0x000021ac   0x00000032   Code   RO          327    .text.vTaskPlaceOnEventList  tasks.o
    0x000021de   0x000021de   0x00000002   PAD
    0x000021e0   0x000021e0   0x0000006e   Code   RO          331    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x0000224e   0x0000224e   0x00000002   PAD
    0x00002250   0x00002250   0x0000009c   Code   RO          299    .text.vTaskStartScheduler  tasks.o
    0x000022ec   0x000022ec   0x00000092   Code   RO          321    .text.vTaskStepTick  tasks.o
    0x0000237e   0x0000237e   0x00000002   PAD
    0x00002380   0x00002380   0x00000010   Code   RO          275    .text.vTaskSuspendAll  tasks.o
    0x00002390   0x00002390   0x00000086   Code   RO          293    .text.vTaskSwitchContext  tasks.o
    0x00002416   0x00002416   0x00000002   PAD
    0x00002418   0x00002418   0x000000da   Code   RO          132    .text.xPortStartScheduler  port.o
    0x000024f2   0x000024f2   0x00000002   PAD
    0x000024f4   0x000024f4   0x000000a8   Code   RO          197    .text.xQueueGenericCreate  queue.o
    0x0000259c   0x0000259c   0x000001a8   Code   RO          223    .text.xQueueReceive  queue.o
    0x00002744   0x00002744   0x000000b0   Code   RO          341    .text.xTaskCheckForTimeOut  tasks.o
    0x000027f4   0x000027f4   0x00000204   Code   RO          269    .text.xTaskCreate   tasks.o
    0x000029f8   0x000029f8   0x00000026   Code   RO          359    .text.xTaskGetSchedulerState  tasks.o
    0x00002a1e   0x00002a1e   0x00000002   PAD
    0x00002a20   0x00002a20   0x0000000c   Code   RO          307    .text.xTaskGetTickCount  tasks.o
    0x00002a2c   0x00002a2c   0x000001ba   Code   RO          305    .text.xTaskIncrementTick  tasks.o
    0x00002be6   0x00002be6   0x00000002   PAD
    0x00002be8   0x00002be8   0x000000c6   Code   RO          363    .text.xTaskPriorityDisinherit  tasks.o
    0x00002cae   0x00002cae   0x00000002   PAD
    0x00002cb0   0x00002cb0   0x00000124   Code   RO          333    .text.xTaskRemoveFromEventList  tasks.o
    0x00002dd4   0x00002dd4   0x00000184   Code   RO          279    .text.xTaskResumeAll  tasks.o
    0x00002f58   0x00002f58   0x000000a4   Code   RO          415    .text.xTimerCreateTimerTask  timers.o
    0x00002ffc   0x00002ffc   0x0000002c   Code   RO          624    locale$$code        c_w.l(lc_ctype_c.o)
    0x00003028   0x00003028   0x00000062   Code   RO          492    x$fpl$d2f           fz_ws.l(d2f.o)
    0x0000308a   0x0000308a   0x00000002   PAD
    0x0000308c   0x0000308c   0x00000150   Code   RO          494    x$fpl$dadd          fz_ws.l(daddsub_clz.o)
    0x000031dc   0x000031dc   0x000002b4   Code   RO          501    x$fpl$ddiv          fz_ws.l(ddiv.o)
    0x00003490   0x00003490   0x0000005e   Code   RO          504    x$fpl$dfix          fz_ws.l(dfix.o)
    0x000034ee   0x000034ee   0x00000026   Code   RO          508    x$fpl$dfltu         fz_ws.l(dflt_clz.o)
    0x00003514   0x00003514   0x00000154   Code   RO          514    x$fpl$dmul          fz_ws.l(dmul.o)
    0x00003668   0x00003668   0x0000009c   Code   RO          592    x$fpl$dnaninf       fz_ws.l(dnaninf.o)
    0x00003704   0x00003704   0x0000000c   Code   RO          594    x$fpl$dretinf       fz_ws.l(dretinf.o)
    0x00003710   0x00003710   0x000001dc   Code   RO          496    x$fpl$dsub          fz_ws.l(daddsub_clz.o)
    0x000038ec   0x000038ec   0x00000056   Code   RO          516    x$fpl$f2d           fz_ws.l(f2d.o)
    0x00003942   0x00003942   0x00000002   PAD
    0x00003944   0x00003944   0x000000c4   Code   RO          518    x$fpl$fadd          fz_ws.l(faddsub_clz.o)
    0x00003a08   0x00003a08   0x00000036   Code   RO          524    x$fpl$ffix          fz_ws.l(ffix.o)
    0x00003a3e   0x00003a3e   0x00000002   PAD
    0x00003a40   0x00003a40   0x00000030   Code   RO          529    x$fpl$fflt          fz_ws.l(fflt_clz.o)
    0x00003a70   0x00003a70   0x00000102   Code   RO          534    x$fpl$fmul          fz_ws.l(fmul.o)
    0x00003b72   0x00003b72   0x0000008c   Code   RO          596    x$fpl$fnaninf       fz_ws.l(fnaninf.o)
    0x00003bfe   0x00003bfe   0x0000000a   Code   RO          598    x$fpl$fretinf       fz_ws.l(fretinf.o)
    0x00003c08   0x00003c08   0x000000ea   Code   RO          520    x$fpl$fsub          fz_ws.l(faddsub_clz.o)
    0x00003cf2   0x00003cf2   0x00000000   Code   RO          600    x$fpl$usenofp       fz_ws.l(usenofp.o)
    0x00003cf2   0x00003cf2   0x000000d8   Data   RO           36    .rodata.str1.1      main.o
    0x00003dca   0x00003dca   0x00000003   Data   RO           75    .rodata.str1.1      uart.o
    0x00003dcd   0x00003dcd   0x00000003   PAD
    0x00003dd0   0x00003dd0   0x00000004   Data   RO          386    .rodata.uxTopUsedPriority  tasks.o
    0x00003dd4   0x00003dd4   0x00000020   Data   RO          731    Region$$Table       anon$$obj.o
    0x00003df4   0x00003df4   0x00000110   Data   RO          623    locale$$data        c_w.l(lc_ctype_c.o)


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00003f04, Size: 0x00000008, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00003f04   0x00000004   Data   RW           97    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   0x00003f08   0x00000004   Data   RW          154    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000008, Load base: 0x00003f0c, Size: 0x00005180, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000008        -       0x000000e4   Zero   RW          475    .bss                c_w.l(rand.o)
    0x200000ec        -       0x00000060   Zero   RW          631    .bss                c_w.l(libspace.o)
    0x2000014c        -       0x00000c80   Zero   RW           25    .bss.Field          main.o
    0x20000dcc        -       0x00000004   Zero   RW           34    .bss.Game           main.o
    0x20000dd0        -       0x00000004   Zero   RW           28    .bss.Gy             main.o
    0x20000dd4        -       0x00000004   Zero   RW           37    .bss.a              main.o
    0x20000dd8        -       0x00000004   Zero   RW           38    .bss.b              main.o
    0x20000ddc        -       0x00000004   Zero   RW           32    .bss.dir            main.o
    0x20000de0        -       0x00000004   Zero   RW           29    .bss.head           main.o
    0x20000de4        -       0x00000004   Zero   RW           22    .bss.highScore      main.o
    0x20000de8        -       0x00000004   Zero   RW           23    .bss.i              main.o
    0x20000dec        -       0x00000004   Zero   RW           24    .bss.j              main.o
    0x20000df0        -       0x00000004   Zero   RW           31    .bss.power          main.o
    0x20000df4        -       0x00000004   Zero   RW          457    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000df8        -       0x00000004   Zero   RW          385    .bss.pxCurrentTCB   tasks.o
    0x20000dfc        -       0x00000004   Zero   RW          455    .bss.pxCurrentTimerList  timers.o
    0x20000e00        -       0x00000004   Zero   RW          396    .bss.pxDelayedTaskList  tasks.o
    0x20000e04        -       0x00000004   Zero   RW          180    .bss.pxEnd          heap_4.o
    0x20000e08        -       0x00000004   Zero   RW          397    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000e0c        -       0x00000004   Zero   RW          456    .bss.pxOverflowTimerList  timers.o
    0x20000e10        -       0x00000064   Zero   RW          387    .bss.pxReadyTasksLists  tasks.o
    0x20000e74        -       0x00000001   Zero   RW           41    .bss.received_char  main.o
    0x20000e75   0x00003f0c   0x00000003   PAD
    0x20000e78        -       0x00000004   Zero   RW           33    .bss.score          main.o
    0x20000e7c        -       0x00000004   Zero   RW           35    .bss.speedOffset    main.o
    0x20000e80        -       0x00000004   Zero   RW           30    .bss.tail           main.o
    0x20000e84        -       0x00004000   Zero   RW          186    .bss.ucHeap         heap_4.o
    0x20004e84        -       0x00000001   Zero   RW          152    .bss.ucMaxSysCallPriority  port.o
    0x20004e85   0x00003f0c   0x00000003   PAD
    0x20004e88        -       0x00000004   Zero   RW          153    .bss.ulMaxPRIGROUPValue  port.o
    0x20004e8c        -       0x00000001   Zero   RW          157    .bss.ulStoppedTimerCompensation  port.o
    0x20004e8d   0x00003f0c   0x00000003   PAD
    0x20004e90        -       0x00000004   Zero   RW          156    .bss.ulTimerCountsForOneTick  port.o
    0x20004e94        -       0x00000004   Zero   RW          392    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20004e98        -       0x00000004   Zero   RW          391    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20004e9c        -       0x00000004   Zero   RW          394    .bss.uxSchedulerSuspended  tasks.o
    0x20004ea0        -       0x00000004   Zero   RW          389    .bss.uxTaskNumber   tasks.o
    0x20004ea4        -       0x00000004   Zero   RW          388    .bss.uxTopReadyPriority  tasks.o
    0x20004ea8        -       0x00000004   Zero   RW           26    .bss.x              main.o
    0x20004eac        -       0x00000014   Zero   RW          458    .bss.xActiveTimerList1  timers.o
    0x20004ec0        -       0x00000014   Zero   RW          459    .bss.xActiveTimerList2  timers.o
    0x20004ed4        -       0x00000014   Zero   RW          405    .bss.xDelayedTaskList1  tasks.o
    0x20004ee8        -       0x00000014   Zero   RW          406    .bss.xDelayedTaskList2  tasks.o
    0x20004efc        -       0x00000004   Zero   RW          181    .bss.xFreeBytesRemaining  heap_4.o
    0x20004f00        -       0x00000004   Zero   RW          401    .bss.xIdleTaskHandle  tasks.o
    0x20004f04        -       0x00000004   Zero   RW          155    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x20004f08        -       0x00000004   Zero   RW          183    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20004f0c        -       0x00000004   Zero   RW          402    .bss.xNextTaskUnblockTime  tasks.o
    0x20004f10        -       0x00000004   Zero   RW          404    .bss.xNumOfOverflows  tasks.o
    0x20004f14        -       0x00000004   Zero   RW          184    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20004f18        -       0x00000004   Zero   RW          185    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20004f1c        -       0x00000004   Zero   RW          403    .bss.xPendedTicks   tasks.o
    0x20004f20        -       0x00000014   Zero   RW          400    .bss.xPendingReadyList  tasks.o
    0x20004f34        -       0x00000004   Zero   RW          393    .bss.xSchedulerRunning  tasks.o
    0x20004f38        -       0x00000008   Zero   RW          182    .bss.xStart         heap_4.o
    0x20004f40        -       0x00000014   Zero   RW          398    .bss.xSuspendedTaskList  tasks.o
    0x20004f54        -       0x00000004   Zero   RW           40    .bss.xTask1Handle   main.o
    0x20004f58        -       0x00000004   Zero   RW           42    .bss.xTask2Handle   main.o
    0x20004f5c        -       0x00000004   Zero   RW           39    .bss.xTask3Handle   main.o
    0x20004f60        -       0x00000014   Zero   RW          390    .bss.xTasksWaitingTermination  tasks.o
    0x20004f74        -       0x00000004   Zero   RW          395    .bss.xTickCount     tasks.o
    0x20004f78        -       0x00000004   Zero   RW          453    .bss.xTimerQueue    timers.o
    0x20004f7c        -       0x00000004   Zero   RW          454    .bss.xTimerTaskHandle  timers.o
    0x20004f80        -       0x00000004   Zero   RW          399    .bss.xYieldPending  tasks.o
    0x20004f84        -       0x00000004   Zero   RW           27    .bss.y              main.o
    0x20004f88        -       0x00000000   Zero   RW           84    HEAP                startup_tm4c123.o
    0x20004f88        -       0x00000200   Zero   RW           83    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       610          0          0          0      16412       5334   heap_4.o
       150          0          0          0          0       2310   list.o
      2490        276        216          0       3273       4261   main.o
       974         12          0          4         14       5004   port.o
       998          0          0          0          0      25341   queue.o
       276         24        620          0        512       5408   startup_tm4c123.o
         2          0          0          4          0       5815   system_tm4c123.o
      3688          8          4          0        260      41987   tasks.o
       876         18          0          0         60      13278   timers.o
       542          0          3          0          0       4112   uart.o

    ----------------------------------------------------------------------
     10672        350        878          8      20540     112850   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        66         12          3          0          9          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
        44         10        272          0          0         76   lc_ctype_c.o
         2          0          0          0          0          0   libinit.o
        24          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       112         18          0          0        228        160   rand.o
        16          4          0          0          0         76   rt_ctype_table.o
         8          4          0          0          0         68   rt_locale_intlibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       124          0          0          0          0         88   strcmpv7em.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        26          0          0          0          0         76   tolower.o
         2          0          0          0          0         68   use_no_semi.o
        98          4          0          0          0         92   d2f.o
       812         16          0          0          0        296   daddsub_clz.o
       692        140          0          0          0        216   ddiv.o
        94          4          0          0          0         92   dfix.o
        38          0          0          0          0         68   dflt_clz.o
       340         12          0          0          0        104   dmul.o
       156          4          0          0          0         92   dnaninf.o
        12          0          0          0          0         68   dretinf.o
        86          4          0          0          0         84   f2d.o
       430          8          0          0          0        168   faddsub_clz.o
        54          4          0          0          0         84   ffix.o
        48          0          0          0          0         68   fflt_clz.o
       258          4          0          0          0         84   fmul.o
       140          4          0          0          0         84   fnaninf.o
        10          0          0          0          0         68   fretinf.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
      4310        256        272          0        324       3160   Library Totals
        18          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1024         52        272          0        324       1492   c_w.l
      3268        204          0          0          0       1668   fz_ws.l

    ----------------------------------------------------------------------
      4310        256        272          0        324       3160   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     14982        606       1150          8      20864     114234   Grand Totals
     14982        606       1150          8      20864     114234   ELF Image Totals
     14982        606       1150          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                16132 (  15.75kB)
    Total RW  Size (RW Data + ZI Data)             20872 (  20.38kB)
    Total ROM Size (Code + RO Data + RW Data)      16140 (  15.76kB)

==============================================================================

